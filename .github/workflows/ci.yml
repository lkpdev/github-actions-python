# GitHub CI build pipeline
name: Hello World CI build

on:
  push:
    branches:
      - master
      - main

jobs:
  helloworld-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up python 3.7
      uses: actions/setup-python@v5
      with:
        python-version: 3.7

    - name: Install dependencies
      run: |
        cd src
        python -m pip install --upgrade pip
        pip install coverage
        if  [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run Python script
      run: python src/helloworld/core.py
    - name: Run Unit Tests and generate coverage report
      run: |
        cd src
        python -m unittest -v
        coverage run -m unittest
        coverage report
        coverage html
    - name: Archive code coverage html report
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report
        path: src/htmlcov
    - name: Run package creation
      run: |
        cd src
        python -m pip install --user --upgrade build
        python -m build
    - name: Archive package
      uses: actions/upload-artifact@v4
      with:
        name: hello-world
        path: src/dist

  docker-build:
    runs-on: ubuntu-latest
    needs: helloworld-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: hello-world
          path: src/dist

      - name: Build Docker image
        run: |
          docker build -t lipikapal/lptest-hello-world .
        working-directory: ./  # Set the working directory where artifacts are downloaded

      - name: Push Docker image
        run: |
          echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
          docker push lipikapal/lptest-hello-world:latest
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Install Trivy
        run: |
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update && sudo apt-get install -y trivy

      - name: Scan Docker image with Trivy
        run: |
          trivy image --severity HIGH --no-progress lipikapal/lptest-hello-world:latest

      - name: Run Docker container and print output
        run: |
          docker run lipikapal/lptest-hello-world:latest


